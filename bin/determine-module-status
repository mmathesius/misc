#!/usr/bin/python3

# loop through the input, in the format generated by list-fedora-mbs-modules,
# determining the status for each module stream

# Note: possible input module states are:
#   init, wait, build, done, failed, ready, garbage
# Note: output status for each module stream:
#   seen, active, retired

import sys

mod_status = {}

def main (arguments):
    for line in sys.stdin:
        line = line.rstrip()
        (name, stream, version, context, scratch, id, state) = line.split(':')


        # ignore scratch builds
        if scratch == 'true':
            continue

        modstream = ':'.join([name, stream])

        if modstream in mod_status:
            old_status = mod_status[modstream]
        else:
            old_status = 'seen'

        # once active, a module stays active
        if old_status == 'active':
            continue

        if state == 'garbage':
            new_status = 'retired'
        elif state == 'ready':
            new_status = 'active'
        else:
            new_status = old_status

        mod_status[modstream] = new_status

    # list all obsolete module streams
    for mod, status in mod_status.items():
        print("{}:{}".format(mod, status))

if __name__ == '__main__':
    sys.exit (main (sys.argv[1:]))
